<div>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="navbar-inner">
            <div class="container">
                <a class="brand" data-bind="attr: { href: router.visibleRoutes()[0].hash }">
                    <span>Survey App</span>
                </a>
                <ul class="nav" data-bind="foreach: router.visibleRoutes">
                    <li data-bind="css: { active: isActive }">
                        <a data-bind="attr: { href: hash }, html: name"></a>
                    </li>
                </ul>
                <div class="loader pull-right" data-bind="css: { active: router.isNavigating }">
                    <i class="icon-spinner icon-2x icon-spin" ></i>
                </div>
            </div>
        </div>
    </div>
    <div class="container page-host" data-bind="
        compose: { 
            model: router.activeItem,           //wiring the router
            afterCompose: router.afterCompose,  //wiring the router
            transition: 'entrance',             //use the 'entrance' transition when switching views
            cacheViews: true                    //telling composition to keep views in dom, reuse
        }
    ">
        @*
        The active view according to the router will be 'composed' here.
        'Compose' is simply a custom knockout binding baked into durandal that in a nutshell
        wires together a view and a viewModel and calls ko.applyBindings
        *@
    </div>

</div>