@using SurveyApp.Model.Models

@{
    var surveyHelper = this.KnockoutHelperForType<Survey>("survey", true);
}

<div class="messageBox autoclose" style="width: 700px">
    <form class="form-horizontal">
        <div class="modal-header">
            <button type="button" class="close" data-bind="click: close">&times;</button>
            <h3>
                @*Note: below could use a 'normal' computed text binding to the viewModel. This demos "EmitPropTextFor"*@
                <span>
                    <!-- ko if: @surveyHelper.EmitPropTextFor(x => x.SurveyId) === null -->
                        Create Survey
                    <!-- /ko -->
                    <!-- ko if: @surveyHelper.EmitPropTextFor(x => x.SurveyId) !== null -->
                        Update Survey for
                        <span @surveyHelper.DataBind(db => db.Text(x => x.LastName))></span>,
                        <span @surveyHelper.DataBind(db => db.Text(x => x.FirstName))></span>
                    <!-- /ko -->
                </span>
            </h3>
        </div>

        <div class="modal-body">
            <fieldset>
                <legend>Basic Details</legend>

                <div class="control-group">
                    @surveyHelper.LabelFor(x => x.FirstName).Class("control-label")
                    <div class="controls">
                        @surveyHelper.BoundTextBoxFor(x => x.FirstName)
                    </div>
                </div>
                
                <div class="control-group">
                    @surveyHelper.LabelFor(x => x.LastName).Class("control-label")
                    <div class="controls">
                        @surveyHelper.BoundTextBoxFor(x => x.LastName)
                    </div>
                </div>
                
                <div class="control-group">
                    @surveyHelper.LabelFor(x => x.ZipCode).Class("control-label")
                    <div class="controls">
                        @surveyHelper.BoundTextBoxFor(x => x.ZipCode)
                    </div>
                </div>

            </fieldset>

            <fieldset>
                <legend>Demographics</legend>

            </fieldset>

            <fieldset>
                <legend>Favorite Foods</legend>

            </fieldset>
        </div>
        <div class="modal-footer">
            <button class="btn" data-bind="click: close">Close</button>
            <button class="btn btn-primary" type="submit">
                @*Note: below could use a 'normal' computed text binding to the viewModel. This demos "EmitPropTextFor"*@
                <!-- ko if: @surveyHelper.EmitPropTextFor(x => x.SurveyId) === null -->
                Create
                <!-- /ko -->
                <!-- ko if: @surveyHelper.EmitPropTextFor(x => x.SurveyId) !== null -->
                Update
                <!-- /ko -->
            </button>
        </div>
    </form>
</div>
