@using FluentKnockoutHelpers.Core.NodeBuilding
@using SurveyApp.Web.ApiControllers

<section>
    @*SURVEYS LIST*@
    @{
        var summaries = this.KnockoutHelperForApi<SurveyController>().Endpoint(api => api.GetAll(), "surveySummaries", true);
    }
    
    <h1>
        Surveys
    </h1>
    <table class="table table-bordered pull-left" data-bind="css: { 'item-selected': selectedSurvey() != null }">
        <thead>
            <tr>
                <th>@summaries.DisplayNameFor(x => x.LastName)</th>
                <th>@summaries.DisplayNameFor(x => x.FirstName)</th>
                <th>@summaries.DisplayNameFor(x => x.DateOfBirth)</th>
                <th>@summaries.DisplayNameFor(x => x.Gender)</th>
                <th class="actions"></th>
            </tr>
        </thead>
    
        <tbody>

            @using (var summary = summaries.ForEachKoComment())
            {
                <tr data-bind="click: $root.toggleSelected, css: { selected: $root.selectedSurvey() == $data }">
                    <td @summary.DataBind(db => db.Text(x => x.LastName))></td>
                    <td @summary.DataBind(db => db.Text(x => x.FirstName))></td>
                    <td @summary.DataBind(db => db.Text(x => x.DateOfBirth))></td>
                    <td @summary.DataBind(db => db.Text(x => x.Gender))></td>
                    <td class="actions">
                        @*EDIT*@
                        <a class="btn btn-info"
                           data-bind="attr: { href: '#/surveys/' + @summary.EvalObservableFor(x => x.SurveyId)}">
                            <i class="icon-edit"></i>
                        </a>
                        @*DELETE*@
                        <button class="btn btn-danger" data-bind="click: $root.deleteSurvey, clickBubble: false"><i class="icon-remove-sign"></i></button>
                    </td>
                </tr>
            }

            <tr data-bind="if: !loading() && surveySummaries().length == 0">
                <td colspan="5" style="text-align: center">
                    No surveys found
                </td>
            </tr>
        </tbody>
    </table>
    
    <div class="spinner" data-bind="visible: loading"></div>
    

    @*SELECTED SURVEY DETAIL*@
    @{
        var detail = this.KnockoutHelperForApi<SurveyController>().Endpoint(api => api.GetAll().Single(), "selectedSurvey", true);
    }
    <fieldset style="padding-left: 20px;" data-bind="if: selectedSurvey() != null">
        <legend><span @detail.DataBind(db => db.Text(x => x.LastName))></span>, <span @detail.DataBind(db => db.Text(x => x.FirstName))></span></legend>
        <form class ="form-horizontal">
            <div class="control-group">
                @detail.LabelFor(x => x.NumberOfTechProducts).Class("control-label")
                <div @detail.DataBind(db => db.Text(x => x.NumberOfTechProducts)).Class("uneditable controls")></div>
            </div>
            <div class="control-group">
                @detail.LabelFor(x => x.NumberOfChildren).Class("control-label")
                <div @detail.DataBind(db => db.Text(x => x.NumberOfChildren)).Class("uneditable controls")></div>
            </div>
            <div class="control-group">
                @detail.LabelFor(x => x.OverallHealthyScore).Class("control-label")
                <div @detail.DataBind(db => db.Text(x => x.OverallHealthyScore)).Class("uneditable controls")></div>
            </div>
            
            @*Inject a 'shared view' into the DOM specifiying the model and view to compose together*@
            <div class="control-group" data-bind="compose: { model: new locationInfo(selectedSurvey().Location), view: 'views/surveys/shared/locationInfo' }">
            </div>
        </form>
    </fieldset>

</section>